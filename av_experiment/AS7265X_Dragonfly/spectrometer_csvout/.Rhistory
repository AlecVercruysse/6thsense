install.packages("mosaic")
install.packages("ggmap")
library(ggmap)
sf = get_googlemap('san francisco', zoom = 12)
ggmap(sf) + geom_point(data=airb, aes(y=latitude, x=longitude, color=log(price))) + facet_wrap(~room_type) + scale_color_continuous(low=I("yellow"), high=I("blue"))
airb <-read.csv("http://data.insideairbnb.com/united-states/ca/san-francisco/2018-08-06/visualisations/listings.csv",header=TRUE)
qplot ?
? qplot
qplot ?
qplot help
qplot help
qplot ?
qplot() ?
he;[]
? ggplot
?? ggplot
? ggplot2
library(ggplot2)
? ggplot2
d <- read.csv("movies.csv")
library(ggplot2)
zscored = (d$Fandango_Stars-mean(d$Fandango_Stars))/sd(d$Fandango_Stars)
qplot(zscored + 3, xlab="Realistic Fandango Stars", ylab="# of Movies", color=am)
zscored = (d$Fandango_Stars-mean(d$Fandango_Stars))/sd(d$Fandango_Stars)
qplot(zscored + 3, xlab="Realistic Fandango Stars", ylab="# of Movies", color=Fandango_stars)
zscored = (d$Fandango_Stars-mean(d$Fandango_Stars))/sd(d$Fandango_Stars)
qplot(zscored + 3, xlab="Realistic Fandango Stars", ylab="# of Movies", color=d$Fandango_stars)
names(d)
? geom_area
? aes
? geom_area
a <- ggplot(d, aes(Fandango_Stars*20, RottenTomatoes))
a + geom_area(Fandango_Stars, alpha=.3)
a + geom_area(Fandango_Stars)
a + geom_area(d$Fandango_Stars)
a + geom_area(aes(y=Fandango_Stars)
)
a <- ggplot(d)
a + geom_area(aes(y=Fandango_Stars*20))
a <- ggplot(d, aes(RottenTomatoes))
a + geom_area(aes(y=density(RottenTomatoes)))
a + geom_density()
a + geom_density(aes(Fandango_Stars))
a + geom_density() + geom_density(aes(Fandango_Stars))
a <- ggplot(d)
a + geom_density(aes(Fandango_Stars)) + geom_density(aes(RottenTomatoes))
a + geom_density(aes(Fandango_Stars*5)) + geom_density(aes(RottenTomatoes))
a + geom_density(aes(Fandango_Stars*5, color="red")) + geom_density(aes(RottenTomatoes))
a + geom_density(aes(Fandango_Stars*20, color="red")) + geom_density(aes(RottenTomatoes))
a + geom_density(aes(Fandango_Stars*20, color="red")) + geom_density(aes(RottenTomatoes)) + geom_density(aes(Metacritic_User))
a + geom_density(aes(Fandango_Stars*20, color="red")) + geom_density(aes(RottenTomatoes)) + geom_density(aes(Metacritic_User*10, color="blue"))
a
View(a)
plot = a + geom_density(aes(Fandango_Stars*20)) + geom_density(aes(Metacritic)) + geom_density(aes(IMDB*10))
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
plot = a + geom_density(aes(Fandango_Stars*20)) + geom_density(aes(Metacritic)) + geom_density(aes(IMDB*10))
plot
? aes
library("ggplot2")
df = read.csv("movies.csv")
a +
geom_density(aes(Fandango_Stars*20, color='orange') +
geom_density(aes(Metacritic, color='black')) +
geom_density(aes(IMDB*10, color='yellow')) +
coord_cartesian(xlim = c(0, 100))
)
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='orange')) +
geom_density(aes(Metacritic, color='black')) +
geom_density(aes(IMDB*10, color='yellow')) +
coord_cartesian(xlim = c(0, 100))
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100))
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100))
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100)) + theme_minimal()
library("ggplot2")
df = read.csv("movies.csv")
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100)) + theme_minimal() +
xlab("Site's ratings, scaled to [0-100]") +
ylab("Distribution of Ratings")
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100)) + theme_minimal() +
xlab("Site's ratings, scaled from 0-100") +
ylab("Distribution of Ratings")
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100)) + theme_minimal() +
xlab("Site's ratings, scaled from 0 - 100") +
ylab("Distribution of Ratings")
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100)) + theme_minimal() +
xlab("Site's ratings, scaled from 0 - 100") +
ylab("Distribution of Ratings") +
axis.ticks.y=element_blank()
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100)) + theme_minimal() +
xlab("Site's ratings, scaled from 0 - 100") +
ylab("Distribution of Ratings") +
theme(axis.ticks.y=element_blank())
df$RottenTomatoes_User
? qplot
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100)) + theme_minimal() +
xlab("Site's ratings, scaled from 0 - 100") +
ylab("Distribution of Ratings") +
theme(axis.ticks.y=element_blank(), axis.text.y=element_blank())
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100)) + theme_minimal() +
xlab("Site's ratings, scaled from 0 - 100") +
ylab("Distribution of Ratings") +
theme(axis.text.y=element_blank())
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100)) + theme_minimal() +
xlab("Site's ratings, scaled from 0 - 100") +
ylab("Distribution of Ratings") +
theme(axis.text.y=element_blank(), legend.title = "")
names(df)
? qplot
qplot(df$IMDB)
qplot(df$IMDB, theme=theme(axis.text.y = element_blank()))
qplot(df$IMDB, theme(axis.text.y = element_blank()))
qplot(df$IMDB, theme(axis.text.y = element_blank()))
? favstats
?? favstats
? echo
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100)) + theme_minimal() +
xlab("Site's ratings, scaled from 0 - 100") +
ylab("Distribution of Ratings") +
theme(axis.text.y=element_blank())
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100)) + theme_minimal() +
xlab("Site's ratings, scaled from 0 - 100") +
ylab("Distribution of Ratings") +
theme(axis.text.y=element_blank())
library("ggplot2")
df = read.csv("movies.csv")
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100)) + theme_minimal() +
xlab("Site's ratings, scaled from 0 - 100") +
ylab("Distribution of Ratings") +
theme(axis.text.y=element_blank())
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100)) + theme_minimal() +
xlab("Site's ratings, scaled from 0 - 100") +
ylab("Distribution of Ratings") +
theme(axis.text.y=element_blank() legend.title = element_blank())
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100)) + theme_minimal() +
xlab("Site's ratings, scaled from 0 - 100") +
ylab("Distribution of Ratings") +
theme(axis.text.y=element_blank() legend.title=element_blank())
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100)) + theme_minimal() +
xlab("Site's ratings, scaled from 0 - 100") +
ylab("Distribution of Ratings") +
theme(axis.text.y=element_blank(), legend.title="Site:")
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100)) + theme_minimal() +
xlab("Site's ratings, scaled from 0 - 100") +
ylab("Distribution of Ratings") +
theme(axis.text.y=element_blank(), legend.title=element_text("Site:"))
? element_text
a <- ggplot(df)
a +
geom_density(aes(Fandango_Stars*20, color='Fandango')) +
geom_density(aes(Metacritic, color='Metacritic')) +
geom_density(aes(IMDB*10, color='IMDB')) +
coord_cartesian(xlim = c(0, 100)) + theme_minimal() +
xlab("Site's ratings, scaled from 0 - 100") +
ylab("Distribution of Ratings") +
theme(axis.text.y=element_blank(), legend.title=element_blank())
library(mosaic)
df <- read.csv("heatshrink_measurements.csv")
minfreq = min(df$freq, na.rm=TRUE)
maxfreq = max(df$freq, na.rm=TRUE)
for(trial in df$run[!duplicated(df$run)]) {
trial_data <- subset(df, df$run == trial)
#print(trial_data)
a <- ggplot(trial_data, aes(freq, val)) +
geom_point() +
coord_cartesian(xlim=c(minfreq, maxfreq), ylim=c(0,100))
print(a)
}
library(mosaic)
df <- read.csv("heatshrink_measurements.csv")
minfreq = min(df$freq, na.rm=TRUE)
maxfreq = max(df$freq, na.rm=TRUE)
for(trial in df$run[!duplicated(df$run)]) {
trial_data <- subset(df, df$run == trial)
#print(trial_data)
a <- ggplot(trial_data, aes(freq, val)) +
geom_point() +
coord_cartesian(xlim=c(minfreq, maxfreq), ylim=c(0,100))
print(a)
}
setwd("~/Desktop/6thsense/av_experiment/AS7265X_Dragonfly/spectrometer_csvout")
library(mosaic)
df <- read.csv("heatshrink_measurements.csv")
minfreq = min(df$freq, na.rm=TRUE)
maxfreq = max(df$freq, na.rm=TRUE)
for(trial in df$run[!duplicated(df$run)]) {
trial_data <- subset(df, df$run == trial)
#print(trial_data)
a <- ggplot(trial_data, aes(freq, val)) +
geom_point() +
coord_cartesian(xlim=c(minfreq, maxfreq), ylim=c(0,100))
print(a)
}
max(df$val)
max(df$val, na.rm=TRUE)
#print(trial_data)
a <- ggplot(trial_data, aes(freq, val)) +
geom_point() +
coord_cartesian(xlim=c(minfreq, maxfreq), ylim=c(0,1115))
library(mosaic)
df <- read.csv("heatshrink_measurements.csv")
minfreq = min(df$freq, na.rm=TRUE)
maxfreq = max(df$freq, na.rm=TRUE)
for(trial in df$run[!duplicated(df$run)]) {
trial_data <- subset(df, df$run == trial)
#print(trial_data)
a <- ggplot(trial_data, aes(freq, val)) +
geom_point() +
coord_cartesian(xlim=c(minfreq, maxfreq), ylim=c(0,1115))
print(a)
}
library(mosaic)
df <- read.csv("heatshrink_measurements.csv")
minfreq = min(df$freq, na.rm=TRUE)
maxfreq = max(df$freq, na.rm=TRUE)
for(trial in df$run[!duplicated(df$run)]) {
trial_data <- subset(df, df$run == trial)
#print(trial_data)
if (max(trial_data$val >= 300)) {
a <- ggplot(trial_data, aes(freq, val)) +
geom_point() +
coord_cartesian(xlim=c(minfreq, maxfreq), ylim=c(0,1115))
print(a)
}
}
library(mosaic)
df <- read.csv("heatshrink_measurements.csv")
minfreq = min(df$freq, na.rm=TRUE)
maxfreq = max(df$freq, na.rm=TRUE)
for(trial in df$run[!duplicated(df$run)]) {
trial_data <- subset(df, df$run == trial)
#print(trial_data)
if (max(trial_data$val >= 300, na.rm = TRUE)) {
a <- ggplot(trial_data, aes(freq, val)) +
geom_point() +
coord_cartesian(xlim=c(minfreq, maxfreq), ylim=c(0,1115))
print(a)
}
}
